{
  "info": {
    "name": "ANB Rising Stars API",
    "description": "API para la plataforma ANB Rising Stars Showcase",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "12345678-1234-1234-1234-123456789abc",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080/api",
      "type": "string"
    },
    {
      "key": "base_url_health",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "deploy_url",
      "value": "http://ip_de_su_proyecto:8080/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "video_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_email",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_password",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "let random = Math.floor(Math.random() * 100000);",
                  "let email = `juan.perez.${random}@example.com`;",
                  "pm.environment.set(\"test_email\", email);",
                  "pm.environment.set(\"test_password\", \"SecurePass123!\");"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Response has message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Juan\",\n  \"last_name\": \"Pérez\",\n  \"email\": \"{{test_email}}\",\n  \"password1\": \"{{test_password}}\",\n  \"password2\": \"{{test_password}}\",\n  \"city\": \"Bogotá\",\n  \"country\": \"Colombia\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/signup",
              "host": ["{{base_url}}"],
              "path": ["auth", "signup"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "let jsonData = pm.response.json();",
                  "pm.environment.set(\"access_token\", jsonData.access_token);",
                  "pm.test(\"Response has access token\", function () {",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "});",
                  "pm.test(\"Token type is Bearer\", function () {",
                  "    pm.expect(jsonData.token_type).to.eql('Bearer');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "let jsonData = pm.response.json();",
                  "pm.environment.set(\"user_id\", jsonData.id);",
                  "pm.test(\"Response has user data\", function () {",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "    pm.expect(jsonData).to.have.property('first_name');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          }
        }
      ]
    },
    {
      "name": "Videos Management",
      "item": [
        {
          "name": "Upload Video",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "video_file", "type": "file", "src": "./collections/test-video.mp4" },
                { "key": "title", "value": "Mi mejor jugada de baloncesto", "type": "text" }
              ]
            },
            "url": {
              "raw": "{{base_url}}/videos/upload",
              "host": ["{{base_url}}"],
              "path": ["videos", "upload"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"video_id\", jsonData.task_id || jsonData.video_id);",
                  "pm.test(\"Response has task_id\", function () {",
                  "    pm.expect(jsonData).to.have.property('task_id');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get My Videos",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/videos",
              "host": ["{{base_url}}"],
              "path": ["videos"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    if (jsonData.length > 0) {",
                  "        pm.environment.set('video_id', jsonData[0].video_id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url_health}}/health",
          "host": ["{{base_url_health}}"],
          "path": ["health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var jsonData = pm.response.json();",
              "pm.test(\"Health status is healthy\", function () {",
              "    pm.expect(jsonData.status).to.eql('healthy');",
              "});"
            ]
          }
        }
      ]
    }
  ]
}